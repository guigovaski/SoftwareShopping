// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftwareShopping.ProductsAPI.Data.Context;

#nullable disable

namespace SoftwareShopping.ProductsAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SoftwareShopping.ProductsAPI.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "GiftCard",
                            Description = "1500vp",
                            ImageUrl = "",
                            Name = "Valorant 1",
                            Price = 13.0m
                        },
                        new
                        {
                            ProductId = 2,
                            Category = "GiftCard",
                            Description = "3500vp",
                            ImageUrl = "",
                            Name = "Valorant 2",
                            Price = 22.0m
                        },
                        new
                        {
                            ProductId = 3,
                            Category = "Antivírus",
                            Description = "1 year license",
                            ImageUrl = "",
                            Name = "Kaspersky 1",
                            Price = 15.0m
                        },
                        new
                        {
                            ProductId = 4,
                            Category = "Antivírus",
                            Description = "2 years license",
                            ImageUrl = "",
                            Name = "Kaspersky 2",
                            Price = 22.0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
